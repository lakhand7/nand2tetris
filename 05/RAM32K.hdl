// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM32K {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux(in=true,sel=address[14],a=temp1,b=temp2);
	Mux(a=false,b=temp1,sel=load,out=prostemp1);
	Mux(a=false,b=temp2,sel=load,out=prostemp2);

	RAM16K(in=in,load=prostemp1,address[0..13]=address[0..13],out=check1);
	RAM16K(in=in,load=prostemp2,address[0..13]=address[0..13],out=check2);
	    
    Mux16(a=check1,b=check2,sel=address[14],out=out);
}